class ProductManager {
  constructor() {
    this.products = [];
  }

  getProducts() {
    return this.products;
  }

  addProduct(product) {
    const codeExists = this.products.some(p => p.code === product.code);
    if (codeExists) {
      throw new Error(`Product with code ${product.code} already exists`);
    }

    const id = this.products.length > 0 ? this.products[this.products.length - 1].id + 1 : 1;
    const newProduct = { ...product, id };
    this.products.push(newProduct);
    return newProduct;
  }

  getProductById(id) {
    const product = this.products.find(p => p.id === id);
    if (!product) {
      throw new Error(`Product with id ${id} not found`);
    }
    return product;
  }
}

// Usage example:
const pm = new ProductManager();
console.log(pm.getProducts()); // []
const newProduct = {
  title: 'producto prueba',
  description: 'Este es un producto prueba',
  price: 200,
  thumbnail: 'Sin imagen',
  code: 'abc123',
  stock: 25,
};
console.log(pm.addProduct(newProduct)); // {id: 1, title: 'producto prueba', description: 'Este es un producto prueba', price: 200, thumbnail: 'Sin imagen', code: 'abc123', stock: 25}
console.log(pm.getProducts()); // [{id: 1, title: 'producto prueba', description: 'Este es un producto prueba', price: 200, thumbnail: 'Sin imagen', code: 'abc123', stock: 25}]
try {
  pm.addProduct(newProduct); // Error: Product with code abc123 already exists
} catch (err) {
  console.error(err);
}
console.log(pm.getProductById(1)); // {id: 1, title: 'producto prueba', description: 'Este es un producto prueba', price: 200, thumbnail: 'Sin imagen', code: 'abc123', stock: 25}
try {
  pm.getProductById(2); // Error: Product with id 2 not found
} catch (err) {
  console.error(err);
}
